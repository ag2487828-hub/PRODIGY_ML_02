import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.cluster import KMeans

# Load Dataset

# Dataset: https://www.kaggle.com/datasets/vjchoudhary7/customer-segmentation-tutorial-in-python

df = pd.read_csv("Mall_Customers.csv")
print("Dataset Shape:", df.shape)
print(df.head())

# Data Preprocessing

# Select only relevant features: Annual Income & Spending Score
X = df[["Annual Income (k$)", "Spending Score (1-100)"]]

# Elbow Method to find optimal K

wcss = []
for i in range(1, 11):
    kmeans = KMeans(n_clusters=i, init="k-means++", random_state=42)
    kmeans.fit(X)
    wcss.append(kmeans.inertia_)

plt.plot(range(1, 11), wcss, marker='o')
plt.title("Elbow Method")
plt.xlabel("Number of clusters")
plt.ylabel("WCSS")
plt.show()

# Apply K-Means with optimal clusters (let's say 5 from elbow)

kmeans = KMeans(n_clusters=5, init="k-means++", random_state=42)
y_kmeans = kmeans.fit_predict(X)

# Add cluster column to dataframe
df['Cluster'] = y_kmeans

# Visualize the clusters

plt.figure(figsize=(8,6))
colors = ['red', 'blue', 'green', 'cyan', 'magenta']
for i in range(5):
    plt.scatter(X.values[y_kmeans == i, 0], X.values[y_kmeans == i, 1], 
                s=80, c=colors[i], label=f'Cluster {i+1}')

# Plot centroids
plt.scatter(kmeans.cluster_centers_[:,0], kmeans.cluster_centers_[:,1], 
            s=250, c='yellow', edgecolor='black', marker='*', label='Centroids')

plt.title("Customer Segments")
plt.xlabel("Annual Income (k$)")
plt.ylabel("Spending Score (1-100)")
plt.legend()
plt.show()

# Summary of Clusters

cluster_summary = df.groupby('Cluster').mean()[["Annual Income (k$)", "Spending Score (1-100)"]]
print("\nCluster Summary:\n", cluster_summary)
